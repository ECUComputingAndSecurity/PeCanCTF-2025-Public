#!/usr/bin/env python3
"""
Combine Excalidraw  ──  Make a “stego” PNG that
  - shows the picture from a first PNG (e.g. decoy.png)
  - but contains the hidden Excalidraw scene from a second PNG (e.g. secret.png)
  - and saves it as a third PNG (e.g. output.png)

Usage:
    python main.py decoy.png secret.png output.png

Remarks:
  - This code was generated by ChatGPT, verify it before using in any sensitive context.
"""

import struct
import sys
from pathlib import Path

PNG_SIG = b"\x89PNG\r\n\x1a\n"
EXCAL_KEYWORD = b"application/vnd.excalidraw+json"


# ──────────────────────  helpers  ──────────────────────
def iter_chunks(fp, *, expect_sig=True):
    """
    Yield (length, type, data, crc, raw_block) for every chunk in a PNG.
    If expect_sig is False the caller has already consumed the 8‑byte signature.
    """
    if expect_sig and fp.read(8) != PNG_SIG:
        raise ValueError("Not a PNG file")

    while True:
        raw_len = fp.read(4)
        if not raw_len:
            break
        length = struct.unpack(">I", raw_len)[0]
        ctype  = fp.read(4)
        data   = fp.read(length)
        crc    = fp.read(4)
        raw    = raw_len + ctype + data + crc
        yield length, ctype, data, crc, raw
        if ctype == b"IEND":
            break


def excalidraw_chunk(png_path: Path) -> bytes:
    """Return the full tEXt/zTXt/iTXt chunk that embeds Excalidraw JSON."""
    with png_path.open("rb") as fp:
        for _, ctype, data, _, raw in iter_chunks(fp):
            if ctype in (b"tEXt", b"zTXt", b"iTXt") and data.startswith(EXCAL_KEYWORD + b"\x00"):
                return raw
    raise ValueError(f"{png_path}: No Excalidraw metadata found.")


# ──────────────────────  main logic  ──────────────────────
def make_stego(decoy_path: Path, secret_path: Path, out_path: Path) -> None:
    secret_meta = excalidraw_chunk(secret_path)

    with decoy_path.open("rb") as decoy_fp, out_path.open("wb") as out_fp:
        # Copy the 8‑byte PNG signature verbatim
        sig = decoy_fp.read(8)
        if sig != PNG_SIG:
            raise ValueError(f"{decoy_path} is not a PNG file")
        out_fp.write(sig)

        # Walk through every chunk in the decoy
        for _, ctype, data, crc, raw in iter_chunks(decoy_fp, expect_sig=False):
            # Drop any Excalidraw metadata the decoy might already have
            if (
                ctype in (b"tEXt", b"zTXt", b"iTXt")
                and data.startswith(EXCAL_KEYWORD + b"\x00")
            ):
                continue

            # Right before the final IEND, inject the secret metadata
            if ctype == b"IEND":
                out_fp.write(secret_meta)

            # Copy this chunk across (including the IEND itself)
            out_fp.write(raw)


# ──────────────────────  CLI  ──────────────────────
if __name__ == "__main__":
    if len(sys.argv) != 4:
        print("Usage: combine_excalidraw.py decoy.png secret.png output.png")
        sys.exit(1)

    decoy, secret, output = map(Path, sys.argv[1:])
    make_stego(decoy, secret, output)
    print(
        f"✓  Created {output}.\n"
        f"   • Raster layer comes from {decoy.name}\n"
        f"   • Hidden Excalidraw scene comes from {secret.name}"
    )